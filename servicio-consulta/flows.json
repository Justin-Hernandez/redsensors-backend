[
    {
        "id": "5c6c220009097d76",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6307206ff6aca97e",
        "type": "http in",
        "z": "5c6c220009097d76",
        "name": "",
        "url": "/servidores-locales",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 60,
        "wires": [
            [
                "3c6f1f329a2d47b9"
            ]
        ]
    },
    {
        "id": "9fa618fe9da221c4",
        "type": "mongodb4",
        "z": "5c6c220009097d76",
        "clientNode": "412c2389580c0420",
        "collection": "servidores_locales_con_ultimo_estado",
        "operation": "find",
        "output": "toArray",
        "name": "recupera todos los servidores locales",
        "x": 550,
        "y": 60,
        "wires": [
            [
                "272d19c2f704e304"
            ]
        ]
    },
    {
        "id": "3c6f1f329a2d47b9",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "set query",
        "func": "msg.payload = [{}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 60,
        "wires": [
            [
                "9fa618fe9da221c4"
            ]
        ]
    },
    {
        "id": "272d19c2f704e304",
        "type": "http response",
        "z": "5c6c220009097d76",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 770,
        "y": 60,
        "wires": []
    },
    {
        "id": "13e9f42d8c8e9cd4",
        "type": "http in",
        "z": "5c6c220009097d76",
        "name": "",
        "url": "/servidores-locales/:idServidorLocal/sensores",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 120,
        "wires": [
            [
                "c2bd8afc37680276"
            ]
        ]
    },
    {
        "id": "c2bd8afc37680276",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "set query",
        "func": "msg.payload = [[\n    {\n        \"$match\": {\n            \"_id\": msg.req.params.idServidorLocal\n        }\n    }\n]]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 120,
        "wires": [
            [
                "0d816dc6f214e510"
            ]
        ]
    },
    {
        "id": "0d816dc6f214e510",
        "type": "mongodb4",
        "z": "5c6c220009097d76",
        "clientNode": "412c2389580c0420",
        "collection": "sensores_por_servidor_local_con_ultimas_lecturas",
        "operation": "aggregate",
        "output": "toArray",
        "name": "servidores_locales aggregate",
        "x": 700,
        "y": 120,
        "wires": [
            [
                "674d2d3c13371a25"
            ]
        ]
    },
    {
        "id": "674d2d3c13371a25",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "response",
        "func": "if(msg.payload.length > 0)\n{\n    msg.payload = msg.payload[0];\n}else\n{\n    msg.payload = {\n        \"mensaje\": \"El servidor local especificado no existe\"\n    }\n    \n    msg.statusCode = 404\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 120,
        "wires": [
            [
                "249f02b75edc8ce9"
            ]
        ]
    },
    {
        "id": "249f02b75edc8ce9",
        "type": "http response",
        "z": "5c6c220009097d76",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1030,
        "y": 120,
        "wires": []
    },
    {
        "id": "5534d77d0d713935",
        "type": "catch",
        "z": "5c6c220009097d76",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 420,
        "wires": [
            [
                "2f0754f479c7d5d3"
            ]
        ]
    },
    {
        "id": "2f0754f479c7d5d3",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "error response",
        "func": "msg.payload = {\n    \"mensaje\": \"Error Interno del Servidor\"\n}\n\nmsg.statusCode = 500\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 420,
        "wires": [
            [
                "e6d2c2b62123e651"
            ]
        ]
    },
    {
        "id": "e6d2c2b62123e651",
        "type": "http response",
        "z": "5c6c220009097d76",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 410,
        "y": 420,
        "wires": []
    },
    {
        "id": "2171be6809b7fd6e",
        "type": "http in",
        "z": "5c6c220009097d76",
        "name": "",
        "url": "/token",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 320,
        "wires": [
            [
                "aa9e1ba29b5b4cab"
            ]
        ]
    },
    {
        "id": "aa9e1ba29b5b4cab",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "prepara variables",
        "func": "msg.usuario = msg.payload.usuario === undefined ? \"\" : msg.payload.usuario.toString()\nmsg.payload = msg.payload.contraseña === undefined ? \"\" : msg.payload.contraseña.toString()\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 320,
        "wires": [
            [
                "668f6646ff5b441e"
            ]
        ]
    },
    {
        "id": "668f6646ff5b441e",
        "type": "digest",
        "z": "5c6c220009097d76",
        "name": "",
        "algorithm": "SHA512",
        "x": 450,
        "y": 320,
        "wires": [
            [
                "e846b61caf5b1f47"
            ]
        ]
    },
    {
        "id": "e846b61caf5b1f47",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "query",
        "func": "msg.payload = [{\n    \"usuario\": msg.usuario,\n    \"contraseña\": msg.payload\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 320,
        "wires": [
            [
                "3b73689b3abb72a5"
            ]
        ]
    },
    {
        "id": "3b73689b3abb72a5",
        "type": "mongodb4",
        "z": "5c6c220009097d76",
        "clientNode": "412c2389580c0420",
        "collection": "usuarios",
        "operation": "findOne",
        "output": "toArray",
        "name": "",
        "x": 700,
        "y": 320,
        "wires": [
            [
                "d8b009ae4294a62f"
            ]
        ]
    },
    {
        "id": "8428ce578afdbe7e",
        "type": "http response",
        "z": "5c6c220009097d76",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1790,
        "y": 320,
        "wires": []
    },
    {
        "id": "d8b009ae4294a62f",
        "type": "switch",
        "z": "5c6c220009097d76",
        "name": "encontrado?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 850,
        "y": 320,
        "wires": [
            [
                "c1761d5d04b0cf03"
            ],
            [
                "884269f6a50c3475"
            ]
        ]
    },
    {
        "id": "884269f6a50c3475",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "401 error",
        "func": "msg.payload = {\n    \"mensaje\": \"Las credenciales introducidas no pertenecen a ningun usuario\"\n}\n\nmsg.statusCode = 401\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 340,
        "wires": [
            [
                "9909a36164c767c1"
            ]
        ]
    },
    {
        "id": "c1761d5d04b0cf03",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "200 ok",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 300,
        "wires": [
            [
                "6bb7afe0411f4bdf"
            ]
        ]
    },
    {
        "id": "6bb7afe0411f4bdf",
        "type": "uuid",
        "z": "5c6c220009097d76",
        "uuidVersion": "v4",
        "namespaceType": "",
        "namespace": "",
        "namespaceCustom": "",
        "name": "generar token",
        "field": "payload",
        "fieldType": "msg",
        "x": 1140,
        "y": 300,
        "wires": [
            [
                "1de6c85290b87ab6"
            ]
        ]
    },
    {
        "id": "ae9282f3c9a4846a",
        "type": "mongodb4",
        "z": "5c6c220009097d76",
        "clientNode": "412c2389580c0420",
        "collection": "tokens",
        "operation": "insertOne",
        "output": "toArray",
        "name": "insertar token",
        "x": 1480,
        "y": 300,
        "wires": [
            [
                "34e58d45a8d7d39b"
            ]
        ]
    },
    {
        "id": "1de6c85290b87ab6",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "prepare item",
        "func": "msg.token = msg.payload\n\nmsg.payload = [{\n    \"token\": msg.payload,\n    \"timestamp\": new Date()\n}]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 300,
        "wires": [
            [
                "ae9282f3c9a4846a"
            ]
        ]
    },
    {
        "id": "34e58d45a8d7d39b",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "respuesta",
        "func": "msg.payload = {\n    \"token\": msg.token,\n    \"expires_in\": 600\n}\n\nmsg.statusCode = 200\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 300,
        "wires": [
            [
                "8428ce578afdbe7e"
            ]
        ]
    },
    {
        "id": "9909a36164c767c1",
        "type": "link out",
        "z": "5c6c220009097d76",
        "name": "",
        "mode": "link",
        "links": [
            "09e75c8f2e3aa6f0"
        ],
        "x": 1095,
        "y": 340,
        "wires": []
    },
    {
        "id": "09e75c8f2e3aa6f0",
        "type": "link in",
        "z": "5c6c220009097d76",
        "name": "",
        "links": [
            "9909a36164c767c1"
        ],
        "x": 1685,
        "y": 340,
        "wires": [
            [
                "8428ce578afdbe7e"
            ]
        ]
    },
    {
        "id": "85fac66e841492c3",
        "type": "http in",
        "z": "5c6c220009097d76",
        "name": "",
        "url": "/servidores-locales/:idServidorLocal/interrumpir",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 180,
        "wires": [
            [
                "c79a48f76e05df13"
            ]
        ]
    },
    {
        "id": "8a6fa691e6406e1f",
        "type": "switch",
        "z": "5c6c220009097d76",
        "name": "Authorization?",
        "property": "req.headers.authorization",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1060,
        "y": 180,
        "wires": [
            [
                "792d7b311c3e80ab"
            ],
            [
                "c0b5a409fa25d029"
            ]
        ]
    },
    {
        "id": "c0b5a409fa25d029",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "401 error",
        "func": "msg.payload = {\n    \"mensaje\": \"Token invalido\"\n}\n\nmsg.statusCode = 401\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 240,
        "wires": [
            [
                "241d36ccb3d62291"
            ]
        ]
    },
    {
        "id": "241d36ccb3d62291",
        "type": "link out",
        "z": "5c6c220009097d76",
        "name": "",
        "mode": "link",
        "links": [
            "46fdae49c2980eb2"
        ],
        "x": 1335,
        "y": 240,
        "wires": []
    },
    {
        "id": "792d7b311c3e80ab",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "query",
        "func": "msg.payload = [\n    {\n        token: msg.req.headers.authorization.toString().split(\"Bearer \")[1]\n    }\n]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 180,
        "wires": [
            [
                "4d9661936b05eef3"
            ]
        ]
    },
    {
        "id": "4d9661936b05eef3",
        "type": "mongodb4",
        "z": "5c6c220009097d76",
        "clientNode": "412c2389580c0420",
        "collection": "tokens",
        "operation": "findOne",
        "output": "toArray",
        "name": "busca token",
        "x": 1370,
        "y": 180,
        "wires": [
            [
                "767b31fec46a4fbb"
            ]
        ]
    },
    {
        "id": "767b31fec46a4fbb",
        "type": "switch",
        "z": "5c6c220009097d76",
        "name": "encontrado?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1530,
        "y": 180,
        "wires": [
            [
                "9282269079566ce1"
            ],
            [
                "1c97402c220fd9a6"
            ]
        ]
    },
    {
        "id": "1c97402c220fd9a6",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "401 error",
        "func": "msg.payload = {\n    \"mensaje\": \"Token invalido\"\n}\n\nmsg.statusCode = 401\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 240,
        "wires": [
            [
                "4bac12b49f8d01d6"
            ]
        ]
    },
    {
        "id": "4bac12b49f8d01d6",
        "type": "link out",
        "z": "5c6c220009097d76",
        "name": "",
        "mode": "link",
        "links": [
            "46fdae49c2980eb2"
        ],
        "x": 1775,
        "y": 240,
        "wires": []
    },
    {
        "id": "9282269079566ce1",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "respuesta",
        "func": "msg.payload = {\n    \"mensaje\": \"Servidor local interrumpido\"\n}\n\nmsg.statusCode = 200\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 180,
        "wires": [
            [
                "843cdc8f3fc3d9b8"
            ]
        ]
    },
    {
        "id": "843cdc8f3fc3d9b8",
        "type": "http response",
        "z": "5c6c220009097d76",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1930,
        "y": 180,
        "wires": []
    },
    {
        "id": "46fdae49c2980eb2",
        "type": "link in",
        "z": "5c6c220009097d76",
        "name": "",
        "links": [
            "4bac12b49f8d01d6",
            "241d36ccb3d62291",
            "186594fec6598ece"
        ],
        "x": 1835,
        "y": 240,
        "wires": [
            [
                "843cdc8f3fc3d9b8"
            ]
        ]
    },
    {
        "id": "c79a48f76e05df13",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "set query",
        "func": "msg.payload = [\n    {\n        \"_id\": msg.req.params.idServidorLocal\n    }\n]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 180,
        "wires": [
            [
                "f88b68d96b749ee5"
            ]
        ]
    },
    {
        "id": "f88b68d96b749ee5",
        "type": "mongodb4",
        "z": "5c6c220009097d76",
        "clientNode": "412c2389580c0420",
        "collection": "servidores_locales_con_ultimo_estado",
        "operation": "findOne",
        "output": "toArray",
        "name": "busca servidor local",
        "x": 680,
        "y": 180,
        "wires": [
            [
                "a7aa64413c54c893"
            ]
        ]
    },
    {
        "id": "d213c70141c5aa54",
        "type": "function",
        "z": "5c6c220009097d76",
        "name": "400 error",
        "func": "msg.payload = {\n    \"mensaje\": \"El servidor local especificado no existe\"\n}\n\nmsg.statusCode = 404\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 240,
        "wires": [
            [
                "186594fec6598ece"
            ]
        ]
    },
    {
        "id": "a7aa64413c54c893",
        "type": "switch",
        "z": "5c6c220009097d76",
        "name": "encontrado?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 870,
        "y": 180,
        "wires": [
            [
                "8a6fa691e6406e1f"
            ],
            [
                "d213c70141c5aa54"
            ]
        ]
    },
    {
        "id": "186594fec6598ece",
        "type": "link out",
        "z": "5c6c220009097d76",
        "name": "",
        "mode": "link",
        "links": [
            "46fdae49c2980eb2"
        ],
        "x": 1135,
        "y": 240,
        "wires": []
    },
    {
        "id": "412c2389580c0420",
        "type": "mongodb4-client",
        "name": "",
        "protocol": "mongodb",
        "hostname": "",
        "port": "",
        "dbName": "${MONGO_DB}",
        "authSource": "",
        "authMechanism": "DEFAULT",
        "tls": false,
        "tlsCAFile": "",
        "tlsInsecure": false,
        "uri": "${MONGO_URL}",
        "advanced": "",
        "uriTabActive": "tab-uri-advanced"
    }
]